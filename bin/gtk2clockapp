#!/usr/bin/env ruby
require 'gtk2clockapp'
require 'help_parser'
OPTIONS = HelpParser[Gtk2ClockApp::VERSION, <<HELP]
Usage:
  gtk2clockapp [:options+]
Options:
  -h --help
  -v --version
  --fullscreen
  --notdecorated
  --size=INT         \t 186
  --font=NAME        \t Courier
  --background=COLOR \t 000000
  --day=COLOR        \t 00FF00
  --dusk=COLOR       \t FF0000
  --night=COLOR      \t 3F0000
Types:
  INT   /^[1-9]\\d{1,2}$/
  NAME  /^[A-Z][a-z]+( \w+)*$/
  COLOR /^[0-9ABCDEF]{6}$/
HELP
HelpParser.int?(:size)
gui = Gtk2ClockApp.gui
Thread.new do
  now = lambda {|key| Time.now.strftime(Gtk2ClockApp::CONFIG[key])}
  loop do
    gui.set_date now[:DateB]
    gui.set_time now[:Time]
    sleep(60 - Time.now.sec)
    11.times do |i|
      gui.set_date now[[:DateA, :DateB][i%2]]
      sleep 5
    end
  end
end
gui.set_weather '' # 'â›… 75F 92F/66F'
gui.set_spot    '' # 'ðŸ—  WUT: $500'
gui.set_alert   '' # 'ðŸ“¢ Attention!'
Thread.new do
  while line = $stdin.gets
    line.chomp!
    case line
    when /^Weather:(.*)$/
      gui.set_weather $1.strip
    when /^Spot:(.*)$/
      gui.set_spot $1.strip
    when /^Mode:(.*)$/
      mode = $1.strip
      case mode.downcase
      when 'day'
        gui.day_mode
      when 'dusk'
        gui.dusk_mode
      when 'night'
        gui.night_mode
      else
        $stderr.puts 'Unrecognized mode: '+mode
      end
    else
      gui.set_alert line
    end
  end
  exit
end
Gtk.main
